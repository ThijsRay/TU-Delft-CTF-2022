# This file represents the base specification of your challenge. It is used by
# other tools to install and deploy your challenge.

# Required sections
name: "ififif"
author: "DaniÃ«l"
category: ml
description: "Our company has set up the brand new authenticator 5000! Now we can separate student from teachers just by scanning a picture that we hand out to each of them (0 for student, 1 for teacher). The authenticator 5000 is correct in 99.9% of the cases but is it still so accurate under noise?\n\nSubmit a series of 784 pixel values in the range 0-255 separated by spaces. The image you send has to be at most 1300 pixel values away from the original picture under original.txt."
value: 500
type: dynamic

# The extra field provides additional fields for data during the install/sync commands/
# Fields in extra can be used to supply additional information for other challenge types
# For example the follow extra field is for dynamic challenges. To use these following
# extra fields, set the type to "dynamic" and uncomment the "extra" section below
extra:
    initial: 500
    decay: 15
    minimum: 50

# Settings used for Dockerfile deployment
# If not used, remove or set to null
# If you have a Dockerfile set to .
# If you have an imaged hosted on Docker set to the image url (e.g. python/3.8:latest, registry.gitlab.com/python/3.8:latest)
# Follow Docker best practices and assign a tag
image: null
# Specify a host to deploy the challenge onto.
# The currently supported URI schemes are ssh:// and registry://
# ssh is an ssh URI where the above image will be copied to and deployed (e.g. ssh://root@123.123.123.123)
# registry is a Docker registry tag (e.g registry://registry.example.com/test/image)
# host can also be specified during the deploy process: `ctf challenge deploy challenge --host=ssh://root@123.123.123.123`
host: null

# Optional settings

# connection_info is used to provide a link, hostname, or instructions on how to connect to a challenge
connection_info: nc 164.92.218.155 6000

# healthcheck is a tool/script used to check a challenge
# If connection_info was provided to CTFd when the challenge was installed, it will be passed to the healthcheck script:
# ./writeup/exploit.sh --connection-info "nc hostname 12345"
# healthcheck: writeup/healthcheck.sh

# Can be removed if unused
#attempts: 5

# Flags specify answers that your challenge use. You should generally provide at least one.
# Can be removed if unused
# Accepts strings or dictionaries of CTFd API data
flags:
    - TUDCTF{n07_0nly_n3ur4l_n37w0rk5_5uff3r_fr0m_4dv3r54r14l_3x4mpl35!}

# Topics are used to help tell what techniques/information a challenge involves
# They are generally only visible to admins
# Accepts strings
topics:
    - combinatorial optimization / satisfiability

# Tags are used to provide additional public tagging to a challenge
# Can be removed if unused
# Accepts strings
tags:
    - machine learning
    - adversarial examples

# Provide paths to files from the same directory that this file is in
# Accepts strings
files:
    - src/challenge.py
    - src/original.txt
    - src/original.png

# Hints are used to give players a way to buy or have suggestions. They are not
# required but can be nice.
# Can be removed if unused
# Accepts dictionaries or strings

# Requirements are used to make a challenge require another challenge to be
# solved before being available.
# Can be removed if unused
# Accepts challenge names as strings or challenge IDs as integers
# requirements:
#     - "Warmup"
#     - "Are you alive"

# The state of the challenge.
# If the field is omitted, the challenge is visible by default.
# If provided, the field can take one of two values: hidden, visible.
# state: hidden

# Specifies what version of the challenge specification was used.
# Subject to change until ctfcli v1.0.0
version: "0.1"
